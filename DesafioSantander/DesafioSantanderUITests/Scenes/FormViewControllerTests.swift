//
//  FormViewControllerTests.swift
//  DesafioSantander
//
//  Created by Fernanda de Lima on 02/10/18.
//  Copyright (c) 2018 FeLima. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import DesafioSantander
import XCTest

class FormViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: FormViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupFormViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupFormViewController()
  {
    let bundle = Bundle.main
    let storyboard = UIStoryboard(name: "Main", bundle: bundle)
    sut = storyboard.instantiateViewController(withIdentifier: "FormViewController") as! FormViewController
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class FormBusinessLogicSpy: FormBusinessLogic
  {
    var fetchFormCalled = false
    
    func fetchForm(request: Form.FecthForm.Request)
    {
        fetchFormCalled = true
    }
  }
  
  // MARK: Tests
  
  func testShouldDoSomethingWhenViewIsLoaded()
  {
    //Given
    let formBusinessLogicSpy = FormBusinessLogicSpy()
    sut.interactor = formBusinessLogicSpy
    
    // When
    loadView()
    
    // Then
    XCTAssertTrue(formBusinessLogicSpy.fetchFormCalled, "viewDidLoad() should ask the interactor to fetch form")
  }
}
