//
//  FormRouter.swift
//  DesafioSantander
//
//  Created by Fernanda de Lima on 03/09/2018.
//  Copyright (c) 2018 FeLima. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol FormRoutingLogic{
  func routeToSucess(segue: UIStoryboardSegue?)
}

protocol FormDataPassing{
  var dataStore: FormDataStore? { get }
}

class FormRouter: NSObject, FormRoutingLogic, FormDataPassing{
    
  weak var viewController: FormViewController?
  var dataStore: FormDataStore?
  
  // MARK: Routing
  
  func routeToSucess(segue: UIStoryboardSegue?)
  {
    if let segue = segue {
        _ = segue.destination as! ConfirmViewController
//      var destinationDS = destinationVC.router!.dataStore!
//      passDataToSucess(source: dataStore!, destination: &destinationDS)
    } else {
      let storyboard = UIStoryboard(name: "Main", bundle: nil)
      let destinationVC = storyboard.instantiateViewController(withIdentifier: "ConfirmViewController") as! ConfirmViewController
//      var destinationDS = destinationVC.router!.dataStore!
//      passDataToSomewhere(source: dataStore!, destination: &destinationDS)
      navigateToSucess(source: viewController!, destination: destinationVC)
    }
  }

  // MARK: Navigation
  
  func navigateToSucess(source: FormViewController, destination: ConfirmViewController)
  {
    source.present(destination, animated: true, completion: nil)
  }
  
  // MARK: Passing data
  
  //func passDataToSomewhere(source: FormDataStore, destination: inout SomewhereDataStore)
  //{
  //  destination.name = source.name
  //}
}
