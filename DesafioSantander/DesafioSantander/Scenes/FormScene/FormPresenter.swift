//
//  FormPresenter.swift
//  DesafioSantander
//
//  Created by Fernanda de Lima on 03/09/2018.
//  Copyright (c) 2018 FeLima. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FormPresentationLogic{
  func presentFetchedForms(response: Form.FecthForm.Response)
}

class FormPresenter: FormPresentationLogic
{
  weak var viewController: FormDisplayLogic?
  
  // MARK: fetch form
  
    func presentFetchedForms(response: Form.FecthForm.Response)
    {
        let displayedForm = convertForms(forms: response.formModal.cells!)
        let viewModel = Form.FecthForm.ViewModel(displayedForm: displayedForm)
        viewController?.displayFetchedForm(viewModel: viewModel)
    }
    
    private func convertForms(forms: [cellStruct]) -> [Form.FecthForm.ViewModel.DisplayedCell]
    {
        return forms.map { Form.FecthForm.ViewModel.DisplayedCell(id: $0.id!, message: $0.message!, type: $0.type!, typefield: $0.typefield, hidden: $0.hidden!, topSpacing: $0.topSpacing!, show: $0.show, required: $0.required!) }
    }
}
